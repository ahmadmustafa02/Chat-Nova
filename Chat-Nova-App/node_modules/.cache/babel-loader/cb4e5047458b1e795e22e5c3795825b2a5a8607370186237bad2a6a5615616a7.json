{"ast":null,"code":"/*\r\n * Install the Generative AI SDK\r\n *\r\n * $ npm install @google/generative-ai\r\n */\n\nimport { GoogleGenerativeAI, HarmCategory, HarmBlockThreshold } from \"@google/generative-ai\";\nconst apiKey = \"AIzaSyDHYgyQfMh62HszwLlscyuzeWiI_bafoEE\";\nconst genAI = new GoogleGenerativeAI(apiKey);\nconst model = genAI.getGenerativeModel({\n  model: \"gemini-1.5-flash\"\n});\nconst generationConfig = {\n  temperature: 1,\n  topP: 0.95,\n  topK: 64,\n  maxOutputTokens: 8192,\n  responseMimeType: \"text/plain\"\n};\nasync function run(prompt) {\n  const chatSession = model.startChat({\n    generationConfig,\n    // safetySettings: Adjust safety settings\n    // See https://ai.google.dev/gemini-api/docs/safety-settings\n    history: []\n  });\n  const result = await chatSession.sendMessage(prompt);\n  const response = result.response;\n  console.log(response.text());\n  return response.text();\n}\nexport default run;","map":{"version":3,"names":["GoogleGenerativeAI","HarmCategory","HarmBlockThreshold","apiKey","genAI","model","getGenerativeModel","generationConfig","temperature","topP","topK","maxOutputTokens","responseMimeType","run","prompt","chatSession","startChat","history","result","sendMessage","response","console","log","text"],"sources":["D:/Gemini App/gemini-clone/src/config/gemini.js"],"sourcesContent":["\r\n/*\r\n * Install the Generative AI SDK\r\n *\r\n * $ npm install @google/generative-ai\r\n */\r\n\r\nimport {\r\n    GoogleGenerativeAI,\r\n    HarmCategory,\r\n    HarmBlockThreshold,\r\n  } from \"@google/generative-ai\";\r\n  \r\n  const apiKey = \"AIzaSyDHYgyQfMh62HszwLlscyuzeWiI_bafoEE\";\r\n  const genAI = new GoogleGenerativeAI(apiKey);\r\n  \r\n  const model = genAI.getGenerativeModel({\r\n    model: \"gemini-1.5-flash\",\r\n  });\r\n  \r\n  const generationConfig = {\r\n    temperature: 1,\r\n    topP: 0.95,\r\n    topK: 64,\r\n    maxOutputTokens: 8192,\r\n    responseMimeType: \"text/plain\",\r\n  };\r\n  \r\n  async function run(prompt) {\r\n    const chatSession = model.startChat({\r\n      generationConfig,\r\n   // safetySettings: Adjust safety settings\r\n   // See https://ai.google.dev/gemini-api/docs/safety-settings\r\n      history: [\r\n      ],\r\n    });\r\n  \r\n    const result = await chatSession.sendMessage(prompt);\r\n    const response = result.response;\r\n    console.log(response.text());\r\n    return response.text()\r\n  }\r\n  \r\n  export default run;"],"mappings":"AACA;AACA;AACA;AACA;AACA;;AAEA,SACIA,kBAAkB,EAClBC,YAAY,EACZC,kBAAkB,QACb,uBAAuB;AAE9B,MAAMC,MAAM,GAAG,yCAAyC;AACxD,MAAMC,KAAK,GAAG,IAAIJ,kBAAkB,CAACG,MAAM,CAAC;AAE5C,MAAME,KAAK,GAAGD,KAAK,CAACE,kBAAkB,CAAC;EACrCD,KAAK,EAAE;AACT,CAAC,CAAC;AAEF,MAAME,gBAAgB,GAAG;EACvBC,WAAW,EAAE,CAAC;EACdC,IAAI,EAAE,IAAI;EACVC,IAAI,EAAE,EAAE;EACRC,eAAe,EAAE,IAAI;EACrBC,gBAAgB,EAAE;AACpB,CAAC;AAED,eAAeC,GAAGA,CAACC,MAAM,EAAE;EACzB,MAAMC,WAAW,GAAGV,KAAK,CAACW,SAAS,CAAC;IAClCT,gBAAgB;IACnB;IACA;IACGU,OAAO,EAAE;EAEX,CAAC,CAAC;EAEF,MAAMC,MAAM,GAAG,MAAMH,WAAW,CAACI,WAAW,CAACL,MAAM,CAAC;EACpD,MAAMM,QAAQ,GAAGF,MAAM,CAACE,QAAQ;EAChCC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC;EAC5B,OAAOH,QAAQ,CAACG,IAAI,CAAC,CAAC;AACxB;AAEA,eAAeV,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}