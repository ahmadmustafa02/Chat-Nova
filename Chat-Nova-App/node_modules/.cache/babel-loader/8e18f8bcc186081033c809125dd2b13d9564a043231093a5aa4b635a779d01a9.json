{"ast":null,"code":"var _jsxFileName = \"D:\\\\Gemini App\\\\gemini-clone\\\\src\\\\context\\\\Context.jsx\",\n  _s = $RefreshSig$();\nimport { createContext, useState, use } from \"react\";\nimport run from \"../config/gemini\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Context = /*#__PURE__*/createContext();\nconst ContextProvider = props => {\n  _s();\n  const [input, setInput] = useState(\"\");\n  const [recentPrompt, setRecentPrompt] = useState(\"\");\n  const [prevPrompts, setPrevPrompts] = useState([]);\n  const [showResult, setShowResult] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [resultData, setResultData] = useState(\"\");\n  useEffect(() => {\n    console.log(\"Input:\", input);\n    console.log(\"Result Data:\", resultData);\n  }, [input, resultData]);\n  const onSent = async () => {\n    setResultData(\"\"); // Clear previous result\n    setLoading(true);\n    setShowResult(true);\n    setRecentPrompt(input);\n    try {\n      const response = await run(input);\n      setResultData(response);\n    } catch (error) {\n      console.error(\"Error fetching response:\", error);\n      setResultData(\"An error occurred while fetching the response.\");\n    } finally {\n      setLoading(false);\n      setInput(\"\");\n    }\n  };\n  const contextValue = {\n    prevPrompts,\n    setPrevPrompts,\n    onSent,\n    setRecentPrompt,\n    recentPrompt,\n    showResult,\n    input,\n    setInput,\n    setInput\n  };\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n_s(ContextProvider, \"nh3hZSdyWlt2Q5tzbM94GHbr2fs=\");\n_c = ContextProvider;\nexport default ContextProvider;\nvar _c;\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["createContext","useState","use","run","jsxDEV","_jsxDEV","Context","ContextProvider","props","_s","input","setInput","recentPrompt","setRecentPrompt","prevPrompts","setPrevPrompts","showResult","setShowResult","loading","setLoading","resultData","setResultData","useEffect","console","log","onSent","response","error","contextValue","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Gemini App/gemini-clone/src/context/Context.jsx"],"sourcesContent":["import { createContext, useState, use } from \"react\";\r\nimport run from \"../config/gemini\";\r\n\r\nexport const Context = createContext();\r\n\r\n\r\nconst ContextProvider = (props) => {\r\n\r\n    const [input , setInput]= useState(\"\");\r\n    const [recentPrompt, setRecentPrompt] = useState(\"\");\r\n    const [prevPrompts, setPrevPrompts] = useState([]);\r\n    const [showResult, setShowResult] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [resultData, setResultData] = useState(\"\");\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(\"Input:\", input);\r\n        console.log(\"Result Data:\", resultData);\r\n    }, [input, resultData]);\r\n\r\n   \r\n   \r\n    const onSent = async () => {\r\n        setResultData(\"\");  // Clear previous result\r\n        setLoading(true);\r\n        setShowResult(true);\r\n        setRecentPrompt(input);\r\n    \r\n        try {\r\n            const response = await run(input);\r\n            setResultData(response);\r\n        } catch (error) {\r\n            console.error(\"Error fetching response:\", error);\r\n            setResultData(\"An error occurred while fetching the response.\");\r\n        } finally {\r\n            setLoading(false);\r\n            setInput(\"\");\r\n        }\r\n    };\r\n    \r\n   \r\n\r\n\r\n    const contextValue = {\r\n        prevPrompts,\r\n        setPrevPrompts,\r\n        onSent,\r\n        setRecentPrompt,\r\n        recentPrompt,\r\n        showResult,\r\n        input,\r\n        setInput,\r\n        setInput,\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <Context.Provider value={contextValue}>\r\n            {props.children}\r\n        </Context.Provider>\r\n    )\r\n}\r\n\r\nexport default ContextProvider"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,EAAEC,GAAG,QAAQ,OAAO;AACpD,OAAOC,GAAG,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,OAAO,MAAMC,OAAO,gBAAGN,aAAa,CAAC,CAAC;AAGtC,MAAMO,eAAe,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAE/B,MAAM,CAACC,KAAK,EAAGC,QAAQ,CAAC,GAAEV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACe,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACmB,UAAU,EAAEC,aAAa,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAGhDqB,SAAS,CAAC,MAAM;IACZC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEd,KAAK,CAAC;IAC5Ba,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEJ,UAAU,CAAC;EAC3C,CAAC,EAAE,CAACV,KAAK,EAAEU,UAAU,CAAC,CAAC;EAIvB,MAAMK,MAAM,GAAG,MAAAA,CAAA,KAAY;IACvBJ,aAAa,CAAC,EAAE,CAAC,CAAC,CAAE;IACpBF,UAAU,CAAC,IAAI,CAAC;IAChBF,aAAa,CAAC,IAAI,CAAC;IACnBJ,eAAe,CAACH,KAAK,CAAC;IAEtB,IAAI;MACA,MAAMgB,QAAQ,GAAG,MAAMvB,GAAG,CAACO,KAAK,CAAC;MACjCW,aAAa,CAACK,QAAQ,CAAC;IAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZJ,OAAO,CAACI,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChDN,aAAa,CAAC,gDAAgD,CAAC;IACnE,CAAC,SAAS;MACNF,UAAU,CAAC,KAAK,CAAC;MACjBR,QAAQ,CAAC,EAAE,CAAC;IAChB;EACJ,CAAC;EAKD,MAAMiB,YAAY,GAAG;IACjBd,WAAW;IACXC,cAAc;IACdU,MAAM;IACNZ,eAAe;IACfD,YAAY;IACZI,UAAU;IACVN,KAAK;IACLC,QAAQ;IACRA;EAGJ,CAAC;EAED,oBACIN,OAAA,CAACC,OAAO,CAACuB,QAAQ;IAACC,KAAK,EAAEF,YAAa;IAAAG,QAAA,EACjCvB,KAAK,CAACuB;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAE3B,CAAC;AAAA1B,EAAA,CAzDKF,eAAe;AAAA6B,EAAA,GAAf7B,eAAe;AA2DrB,eAAeA,eAAe;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}